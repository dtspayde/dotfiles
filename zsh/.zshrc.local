# Added by termtile (https://github.com/apaszke/termtile)
# alias tl='osascript ~/.termtile/tile.scpt up left'
# alias ur='osascript ~/.termtile/tile.scpt up right'
# alias dl='osascript ~/.termtile/tile.scpt down left'
# alias dr='osascript ~/.termtile/tile.scpt down right'
# alias ll='osascript ~/.termtile/tile.scpt left'
# alias rr='osascript ~/.termtile/tile.scpt right'
# alias up='osascript ~/.termtile/tile.scpt up'
# alias down='osascript ~/.termtile/tile.scpt down'
# alias big='osascript ~/.termtile/resize.scpt '
# alias cen='osascript ~/.termtile/center.scpt '
# alias max='osascript ~/.termtile/maximize.scpt '
# alias sn='osascript ~/.termtile/changeScreen.scpt next'

# sshfs aliases
alias sshfs_nuc_local='mkdir -p /Volumes/Nuclear; sshfs spayde@nuclear-local: /Volumes/Nuclear -o volname=Nuclear -o auto_cache'
alias sshfs_nuc_remote='mkdir -p /Volumes/Nuclear; sshfs spayde@nuclear.hendrix.edu: /Volumes/Nuclear -o volname=Nuclear -o auto_cache'

alias ssh_jlab='env TERM=xterm-256color ssh -Y login.jlab.org'
alias ssh_nuc_remote='ssh -Y -L 8000:nuclear.hendrix.edu:80 nuclear-remote.hendrix.edu'
alias ssh_mysql_cdaql6='ssh -Ct -L 3306:127.0.0.1:3306 login.jlab.org ssh -Ct -L 3306:127.0.0.1:3306 ifarml4.jlab.org ssh -C -L 3306:127.0.0.1:3306 cdaq@cdaql6'

export QWDBADMIN=${HOME}/Software/QwDB_Admin
export QWANALYSIS=${HOME}/Software/QwAnalysis_trunk
export TODOTXT_DEFAULT_ACTION=ls

alias t='todotxt -t'

# Needed to get italics working in tmux (https://www.reddit.com/r/vim/comments/24g8r8/italics_in_terminal_vim_and_tmux/)
# alias tmux='tmux -2'
# alias tmux='env TERM=tmux-256color tmux -2'
# alias tmux='env TERM=screen-256color-it tmux -2'

# Start MacViM in terminal mode (not GUI mode)
if [[ $OSTYPE==darwin* ]]; then
fi

if [[ -r /opt/local/libexec/gnubin/ls ]]; then
        alias ls="command ls --color"
fi

path=(/usr/local/bin $path)
# path=(/opt/local/libexec/gnubin $path)
path=($path ~/Applications/bin)
# path=(~/.cabal/bin $path)
# path=(~/Library/Haskell/bin $path)
path=(~/.local/bin $path)
path=(~/Library/Python/3.6/bin $path)

alias exa="command exa --classify"
alias exal="command exa --classify --long --header --git --group"
alias exaa="command exa --classify --long --header --git --group --all"

if [[ $OSTYPE==darwin* ]]; then
    # alias vim='mvim -v'
    # alias vi='mvim -v'
    alias preview="open -a /System/Applications/Preview.app"
    alias -s pdf=preview
    export EDITOR='mvim -v'
    export VISUAL='mvim'
fi

if [[ $OSTYPE==linux* ]]; then
    alias -s pdf=zathura
    export EDITOR='vim'
    export VISUAL='gvim'
fi

bindkey -v

alias vitodo='vi -S ~/.vim/sessions/session-todo.vim'

alias ez="command $EDITOR ~/.zshrc.local"
alias sz="source ~/.zshrc.local"

alias -s md=$EDITOR
alias -s txt=$EDITOR

autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs

zstyle ':completion:*:*:cdr:*:*' menu selection
zstyle ':chpwd:*' recent-dirs-default true
zstyle ':completion:*' recent-dirs-insert both


### Added by Zinit's installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
### End of Zinit's installer chunk

# ### Added by Zplugin's installer
# source '/Users/spayde/.zplugin/bin/zplugin.zsh'
# autoload -Uz _zplugin
# (( ${+_comps} )) && _comps[zplugin]=_zplugin
# ### End of Zplugin's installer chunk

zinit ice pick"async.zsh" src"pure.zsh"; zinit light sindresorhus/pure
zinit add-fpath sindresorhus/pure
# zinit ice wait'0'! atload'prompt spaceship'
zinit light denysdovhan/spaceship-prompt
zinit add-fpath denysdovhan/spaceship-prompt
zinit light BrandonRoehl/zsh-clean
# zinit light isqua/bureau
zinit ice wait'0'
zinit light zsh-users/zsh-history-substring-search
zinit ice wait'0'
zinit light zsh-users/zsh-completions
# zinit light zsh-users/zsh-syntax-highlighting
zinit ice wait'0'
zinit light zdharma/fast-syntax-highlighting
zinit ice wait'0' atload'_zsh_autosuggest_start'
zinit load zsh-users/zsh-autosuggestions

export SPACESHIP_BATTERY_SHOW='always'
export SPACESHIP_EXIT_CODE_SHOW='true'
export SPACESHIP_USER_SHOW='always'
export SPACESHIP_TIME_SHOW='true'

prompt spaceship

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# source /usr/local/opt/share/fzf/shell/key-bindings.zsh
# source /opt/local/share/zsh/site-functions/fzf
# export FZF_DEFAULT_COMMAND='rg --files 2> /dev/null'
# export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

if [ -f ~/.zshrc.private ]; then
    source ~/.zshrc.private
fi

# Get X server address on linux machines (WSL2 on Windows 10)
if [[ $OSTYPE==linux* ]]; then
    export DISPLAY=$(awk '/nameserver / {print $2; exit}' /etc/resolv.conf 2>/dev/null):0
    export LIBGL_ALWAYS_INDIRECT=1
    # eval `ssh-agent`
    eval `keychain --eval id_rsa id_dsa`
fi

